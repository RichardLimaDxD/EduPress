generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String @db.VarChar(128)
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(128)
  roles    Roles  @default(USER)

  courses Course[]

  progress UserVideoProgress[]

  @@map("users")
}

model Course {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(128)
  description String   @db.Text
  price       Float
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  modules Module[]

  @@map("courses")
}

model Module {
  id    String @id @default(uuid())
  title String @db.VarChar(128)

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  videos Video[]

  @@map("modules")
}

model Video {
  id        String  @id @default(uuid())
  video_url String?

  module   Module @relation(fields: [moduleId], references: [id])
  moduleId String

  progress UserVideoProgress[]

  @@map("videos")
}

model UserVideoProgress {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId String

  watched Boolean @default(false)

  @@unique([userId, videoId])
  @@map("user_video_progress")
}

model Category {
  id   String @id @default(uuid())
  name String

  course   Course[]

  @@map("categories")
}

enum Roles {
  SELLER
  USER
}
